package com.ardublock.translator.block;

import com.ardublock.translator.Translator;
import com.ardublock.translator.block.exception.SocketNullException;
import com.ardublock.translator.block.exception.SubroutineNotDeclaredException;

public class UltrasonicoEdu extends TranslatorBlock
{
	public UltrasonicoEdu(Long blockId, Translator translator, String codePrefix, String codeSuffix, String label)
	{
		super(blockId, translator, codePrefix, codeSuffix, label);
	}

	private final static String ultraSonicFunction = "int ardublockUltrasonicSensorCodeAutoGeneratedReturnCM(int trigPin, int echoPin)\n{\n  long duration;\n  pinMode(trigPin, OUTPUT);\n  pinMode(echoPin, INPUT);\n  digitalWrite(trigPin, LOW);\n  delayMicroseconds(2);\n  digitalWrite(trigPin, HIGH);\n  delayMicroseconds(10);\n  digitalWrite(trigPin, LOW);\n  duration = pulseIn(echoPin, HIGH);\n  duration = duration / 58;\n if ((duration < 2) || (duration > 4000)) return false;\n return duration;\n}\n";
	
	@Override
	public String toCode() throws SocketNullException, SubroutineNotDeclaredException
	{
		TranslatorBlock translatorBlock = this.getRequiredTranslatorBlockAtSocket(0);
		String trigger = translatorBlock.toCode();
		translatorBlock = this.getRequiredTranslatorBlockAtSocket(1);
		String echo = translatorBlock.toCode();
		
		String ret = "delay(1000);\n";
		ret += "int uS = sonar.ping_median();\n";
		ret += "Serial.print(\"Distancia: \");\n";
		ret += "Serial.print(uS / US_ROUNDTRIP_CM);\n";
		ret += "Serial.println(\"cm\");\n";
		
		translator.addHeaderFile("NewPing.h");
		translator.addDefinitionCommand("NewPing sonar("+trigger+","+echo+", 200);");
		translator.addSetupCommand("Serial.begin(9600);");
		return ret;
	}
	
}

